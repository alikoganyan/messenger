<?php

namespace App\Http\Requests\SequencesRequest;

use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Http\Exceptions\HttpResponseException;
use Illuminate\Contracts\Validation\Validator;
use Illuminate\Http\Request;

class SequenceTaskRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules(Request $request)
    {
        $taskType = $this->route('type');

        switch ($taskType){

            case 'sms': return [
                'template_id'=>'required|exists:templates,id',
            ];

            default: return [];
        }
    }

    /**
     * @return array
     */
    public function messages()
    {
        $validation = [];
        $validation["api_alias.regex"] =  ["Вам необходимо заполнить alias в формате alias-for-example"];
        return array_merge($validation,parent::messages()); // TODO: Change the autogenerated stub
    }

    /**
     * @param Validator $validator
     */
    public function failedValidation(Validator $validator)
    {
        throw new HttpResponseException(response()->json([
            'errors' => $validator->messages(),
            'errorType'=>'VALIDATION_ERROR'
        ],422));
    }
}
