<?php

namespace App\Http\Requests\LeadsRequest;

use App\Models\Gateway;
use App\Models\GatewaySetting;
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Http\Exceptions\HttpResponseException;
use Illuminate\Contracts\Validation\Validator;
use Illuminate\Http\Request;

class StoreLeadRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules(Request $request)
    {
        $rules = [
            'last_name'=>'required|string|max:255',
            'first_name'=>'required|string|max:255',
            'father_name'=>'nullable|string|max:255',
            'phone' => ['required','regex:/^\+[0-9]{11,12}$/'],
            'email' => 'required|email',
            'owner_id'=>'required|exists:users,id',
            'project_id'=>'required|exists:projects,id',
            'status'=>'required|exists:leads_status_dict,id',
        ];

        return $rules;
    }

    /**
     * @return array
     */
    public function messages()
    {
        $validation = [];
        $validation["phone.regex"] =  ["Вам необходимо заполнить телефон в формате +79099876543"];
        $validation["status.exists"] =  ["Выберите статус"];
        return array_merge($validation,parent::messages()); // TODO: Change the autogenerated stub
    }

    /**
     * @param Validator $validator
     */
    public function failedValidation(Validator $validator)
    {
        throw new HttpResponseException(response()->json([
            'errors' => $validator->messages(),
            'errorType'=>'VALIDATION_ERROR'
        ],422));
    }
}
