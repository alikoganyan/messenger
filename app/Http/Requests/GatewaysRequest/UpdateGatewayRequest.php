<?php

namespace App\Http\Requests\GatewaysRequest;

use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Http\Exceptions\HttpResponseException;
use Illuminate\Contracts\Validation\Validator;

class UpdateGatewayRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules()
    {
        return [
            "messenger_id"=>"exists:messengers,id",
            "name"=>"required|string|min:6|max:255",
            "description"=>"required|string|min:20|max:255",
            "link"=>["required","regex:/^(?:(?:https?|ftp):\/\/|www\.)[-a-z0-9+&@#\/%?=~_|!:,.;]*[-a-z0-9+&@#\/%=~_|]/"],
            "default"=>"boolean",
            "config"=>"required|array",
            "config.*.field_name"=>"required|string",
            "config.*.placeholder"=>"required|string",
            "config.*.validation"=>["nullable"],
            "config.*.message"=>"nullable|string",
        ];
    }

    /**
     * @return array
     */
    public function messages()
    {
        return array_merge([
            "link.regex"=>"Вам необходимо заполнить URL сайта в формате http://www.example.com",
        ],parent::messages()); // TODO: Change the autogenerated stub
    }

    /**
     * @param Validator $validator
     */
    public function failedValidation(Validator $validator)
    {
        throw new HttpResponseException(response()->json([
            'errors' => $validator->messages(),
            'errorType' => 'VALIDATION_ERROR'
        ], 422));
    }
}
